apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/part-of: backbone
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/part-of: backbone
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/part-of: backbone
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: password
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: user
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
          image: rabbitmq:management
          name: rabbitmq
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-definitions
              mountPath: /etc/rabbitmq/definitions.json
              subPath: definitions.json
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 2Gi
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: rabbitmq-definitions
          configMap:
            name: rabbitmq-definitions
            items:
              - key: definitions.json
                path: definitions.json
